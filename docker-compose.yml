version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - BACKEND_URL=http://localhost:3000

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - CORS_ORIGIN=http://localhost
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=crowd
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
    ports:
      - "3000:3000"
    depends_on:
      mariadb:
        condition: service_healthy
    command: sh -c "npm install && npm run build && npx wait-on tcp:mariadb:3306 && npm start"
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  mariadb:
    image: mariadb:11.6
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: crowd
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_CHARACTER_SET_SERVER: utf8mb4
      MARIADB_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./backend/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mariadb", "-uroot", "-ppassword", "-e", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mariadb_data:
    driver: local
  backend_node_modules:
    driver: local